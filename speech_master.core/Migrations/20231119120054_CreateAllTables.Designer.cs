// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using speech_master.core.Brokers.Storages;

#nullable disable

namespace speech_master.core.Migrations
{
    [DbContext(typeof(StorageBroker))]
    [Migration("20231119120054_CreateAllTables")]
    partial class CreateAllTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("speech_master.core.Models.Feedback", b =>
                {
                    b.Property<Guid>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Accuracy")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Completeness")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Fluency")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pronunciation")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Prosody")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SpeechId")
                        .HasColumnType("TEXT");

                    b.HasKey("FeedbackId");

                    b.HasIndex("SpeechId")
                        .IsUnique();

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("speech_master.core.Models.Speech", b =>
                {
                    b.Property<Guid>("SpeechId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sentence")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("SpeechId");

                    b.HasIndex("UserId");

                    b.ToTable("Speeches");
                });

            modelBuilder.Entity("speech_master.core.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("speech_master.core.Models.Feedback", b =>
                {
                    b.HasOne("speech_master.core.Models.Speech", "Speech")
                        .WithOne("Feedback")
                        .HasForeignKey("speech_master.core.Models.Feedback", "SpeechId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Speech");
                });

            modelBuilder.Entity("speech_master.core.Models.Speech", b =>
                {
                    b.HasOne("speech_master.core.Models.User", "User")
                        .WithMany("Speeches")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("speech_master.core.Models.Speech", b =>
                {
                    b.Navigation("Feedback")
                        .IsRequired();
                });

            modelBuilder.Entity("speech_master.core.Models.User", b =>
                {
                    b.Navigation("Speeches");
                });
#pragma warning restore 612, 618
        }
    }
}
